{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/pi-spotify/",
    "result": {"data":{"site":{"siteMetadata":{"title":"extralife"}},"markdownRemark":{"id":"e902633a-9155-5658-a675-43027cab3764","excerpt":"Notes on how to setup my Raspberry Pi 3b with the Hifiberry Digi+ Standard\nmodule. Setup Raspbian Buster Download Raspbian Buster Lite or the latest\nRaspbianâ€¦","html":"<p>Notes on how to setup my Raspberry Pi 3b with the Hifiberry Digi+ Standard\nmodule.</p>\n<h2>Setup Raspbian Buster</h2>\n<p>Download <a href=\"https://www.raspberrypi.org/downloads/raspbian/\">Raspbian Buster Lite</a> or the latest\nRaspbian lite release. Use <code class=\"language-text\">balenaetcher</code> to copy the image to an SD card.</p>\n<h3>Headless setup</h3>\n<p>Create <code class=\"language-text\">/boot/wpa_supplicant.conf</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">update_config=1\nctrl_interface=/var/run/wpa_supplicant\n\nnetwork={\n  ssid=&quot;&lt;Name of your WiFi&gt;&quot;\n  psk=&quot;&lt;Password for your WiFi&gt;&quot;\n}</code></pre></div>\n<p>Create <code class=\"language-text\">ssh</code> and place int the root directory as well to enable ssh.</p>\n<p>To remove the driver for the on-board soundcard and use Hifiberry Digi instead,\nedit <code class=\"language-text\">/boot/config.txt</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># dtparam=audio=on\ndtoverlay=hifiberry-digi</code></pre></div>\n<h3>Configuration</h3>\n<p>Boot into the raspberry, connect via ssh. Run <code class=\"language-text\">raspbi-config</code>, set a new root password.</p>\n<p>Update all packages: <code class=\"language-text\">sudo apt-get update &amp;&amp; sudo apt-get dist-upgrade</code>.</p>\n<h2>Setup spotifyd</h2>\n<p>Following the <a href=\"https://github.com/Spotifyd/spotifyd/wiki/Installing-on-a-Raspberry-Pi\">wiki</a>\npage, download and unpack the latest binary:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">mkdir spotifyd\ncd spotifyd/\nwget [latest armv6 release]\nunzip spotifyd-*.zip -d</code></pre></div>\n<h3>Configure systemd startup</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ wget https://raw.githubusercontent.com/Spotifyd/spotifyd/master/contrib/spotifyd.service\n$ sudo cp spotifyd.service /etc/systemd/system/spotifyd.service\n\n# change the execution directory to the directory created above\nExecStart=/home/pi/spotifyd/spotifyd --no-daemon\n\n# change the executing user to pi\nUser=pi\n\n# ensure the systemd service is started automatically:\n$ systemctl enable spotifyd.service</code></pre></div>\n<h3>Configure spotifyd</h3>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"># A minimal `/etc/spotifyd.conf` configuration file:\n[global]\ndevice_name = raspberrypi\nbitrate = 320</code></pre></div>\n<h2>ALSA issues</h2>\n<p><a href=\"http://blog.scphillips.com/posts/2013/01/sound-configuration-on-raspberry-pi-with-alsa/\">http://blog.scphillips.com/posts/2013/01/sound-configuration-on-raspberry-pi-with-alsa/</a></p>\n<p>Specifically</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">pi@raspberrypi:/etc $ amixer controls\nnumid=1,iface=MIXER,name=&#39;Tx Source&#39;\n\npi@raspberrypi:/etc $ amixer cget numid=1\nnumid=1,iface=MIXER,name=&#39;Tx Source&#39;\n  ; type=ENUMERATED,access=rw------,values=1,items=2\n  ; Item #0 &#39;S/PDIF RX&#39;\n  ; Item #1 &#39;AIF&#39;\n  : values=0\n\npi@raspberrypi:/etc $ amixer cset numid=1 50%\nnumid=1,iface=MIXER,name=&#39;Tx Source&#39;\n  ; type=ENUMERATED,access=rw------,values=1,items=2\n  ; Item #0 &#39;S/PDIF RX&#39;\n  ; Item #1 &#39;AIF&#39;\n  : values=1</code></pre></div>","frontmatter":{"title":"Hifiberry Setup","date":"October 14, 2019","description":null}},"previous":{"fields":{"slug":"/rstudio/"},"frontmatter":{"title":"How to run R and RStudio inside Docker"}},"next":null},"pageContext":{"id":"e902633a-9155-5658-a675-43027cab3764","previousPostId":"55445ad2-ba91-5009-8331-c080e1514ae8","nextPostId":null}},
    "staticQueryHashes": ["2841359383","3257411868","588636091"]}