{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/pi-spotify/","result":{"data":{"site":{"siteMetadata":{"title":"extralife","social":[{"name":"linkedin","url":"https://www.linkedin.com/in/andreasmaechler/"},{"name":"github","url":"https://github.com/amaechler"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"00ab632b-37cc-5edf-b09f-b65e86599e8b","excerpt":"Notes on how to setup my Raspberry Pi 3b with the Hifiberry Digi+ Standard\nmodule. Setup Raspbian Buster Download  Raspbian Buster Lite  or…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hifiberry Setup\",\n  \"date\": \"2019-10-14T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Notes on how to setup my Raspberry Pi 3b with the Hifiberry Digi+ Standard\\nmodule.\"), mdx(\"h2\", {\n    \"id\": \"setup-raspbian-buster\"\n  }, \"Setup Raspbian Buster\"), mdx(\"p\", null, \"Download \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.raspberrypi.org/downloads/raspbian/\"\n  }), \"Raspbian Buster Lite\"), \" or the latest\\nRaspbian lite release. Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"balenaetcher\"), \" to copy the image to an SD card.\"), mdx(\"h3\", {\n    \"id\": \"headless-setup\"\n  }, \"Headless setup\"), mdx(\"p\", null, \"Create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/boot/wpa_supplicant.conf\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"update_config=1\\nctrl_interface=/var/run/wpa_supplicant\\n\\nnetwork={\\n  ssid=\\\"<Name of your WiFi>\\\"\\n  psk=\\\"<Password for your WiFi>\\\"\\n}\\n\")), mdx(\"p\", null, \"Create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ssh\"), \" and place int the root directory as well to enable ssh.\"), mdx(\"p\", null, \"To remove the driver for the on-board soundcard and use Hifiberry Digi instead,\\nedit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/boot/config.txt\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# dtparam=audio=on\\ndtoverlay=hifiberry-digi\\n\")), mdx(\"h3\", {\n    \"id\": \"configuration\"\n  }, \"Configuration\"), mdx(\"p\", null, \"Boot into the raspberry, connect via ssh. Run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"raspbi-config\"), \", set a new root password.\"), mdx(\"p\", null, \"Update all packages: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo apt-get update && sudo apt-get dist-upgrade\"), \".\"), mdx(\"h2\", {\n    \"id\": \"setup-spotifyd\"\n  }, \"Setup spotifyd\"), mdx(\"p\", null, \"Following the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Spotifyd/spotifyd/wiki/Installing-on-a-Raspberry-Pi\"\n  }), \"wiki\"), \"\\npage, dowload and unpack the latest binary:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"mkdir spotifyd\\ncd spotifyd/\\nwget [latest armv6 release]\\nunzip spotifyd-*.zip -d\\n\")), mdx(\"h3\", {\n    \"id\": \"configure-systemd-startup\"\n  }, \"Configure systemd startup\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ wget https://raw.githubusercontent.com/Spotifyd/spotifyd/master/contrib/spotifyd.service\\n$ sudo cp spotifyd.service /etc/systemd/system/spotifyd.service\\n\\n# change the execution directory to the directory created aove\\nExecStart=/home/pi/spotifyd/spotifyd --no-daemon\\n\\n# change the executing user to pi\\nUser=pi\\n\\n# ensure the systemd service is started automatically:\\n$ systemctl enable spotifyd.service\\n\")), mdx(\"h3\", {\n    \"id\": \"configure-spotifyd\"\n  }, \"Configure spotifyd\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"# A minimal `/etc/spotifyd.conf` configuration file:\\n[global]\\ndevice_name = raspberrypi\\nbitrate = 320\\n\")), mdx(\"h2\", {\n    \"id\": \"alsa-issues\"\n  }, \"ALSA issues\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://blog.scphillips.com/posts/2013/01/sound-configuration-on-raspberry-pi-with-alsa/\"\n  }), \"http://blog.scphillips.com/posts/2013/01/sound-configuration-on-raspberry-pi-with-alsa/\")), mdx(\"p\", null, \"Specifically\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"pi@raspberrypi:/etc $ amixer controls\\nnumid=1,iface=MIXER,name='Tx Source'\\n\\npi@raspberrypi:/etc $ amixer cget numid=1\\nnumid=1,iface=MIXER,name='Tx Source'\\n  ; type=ENUMERATED,access=rw------,values=1,items=2\\n  ; Item #0 'S/PDIF RX'\\n  ; Item #1 'AIF'\\n  : values=0\\n\\npi@raspberrypi:/etc $ amixer cset numid=1 50%\\nnumid=1,iface=MIXER,name='Tx Source'\\n  ; type=ENUMERATED,access=rw------,values=1,items=2\\n  ; Item #0 'S/PDIF RX'\\n  ; Item #1 'AIF'\\n  : values=1\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/pi-spotify/","title":"Hifiberry Setup","tags":[],"keywords":[],"date":"October 14, 2019","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"487463fd-8ac1-59bb-9762-69acb5b7301a","excerpt":"Setup base image Setup environment In my case, I wanted to setup the R environment as described in the\n UT.7.11x Foundations of Data…","slug":"/rstudio/","title":"How to run R and RStudio inside Docker","date":"July 20, 2017"},"next":null},"pageContext":{"id":"00ab632b-37cc-5edf-b09f-b65e86599e8b","previousId":"487463fd-8ac1-59bb-9762-69acb5b7301a"}}}