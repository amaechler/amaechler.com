{"version":3,"file":"component---src-pages-using-typescript-tsx-1600d054d250b1a9bb62.js","mappings":"qKAoCA,UAvBwD,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,SAAf,OACpD,gBAAC,IAAD,CAAQC,MAAM,mBAAmBD,SAAUA,GACvC,gBAAC,IAAD,CAAKC,MAAM,qBACX,oEACA,qEAC6C,sCAD7C,+DAEa,yCAFb,wEAIA,qEAC6C,wCAD7C,oBACiF,wCADjF,eACiH,IAC7G,sCAFJ,UAIA,2DACmCF,EADnC,wBAC8DD,EAAKI,KAAKC,UADxE,KAGA,2DACoC,IAChC,qBAAGC,KAAK,6CAAR,kCAFJ,KAIA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT","sources":["webpack://amaechler.com/./src/pages/using-typescript.tsx"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\";\nimport { PageProps, Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\ntype DataProps = {\n    site: {\n        buildTime: string;\n    };\n};\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path, location }) => (\n    <Layout title=\"Using TypeScript\" location={location}>\n        <Seo title=\"Using TypeScript\" />\n        <h1>Gatsby supports TypeScript by default!</h1>\n        <p>\n            This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note\n            that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.\n        </p>\n        <p>\n            For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a{\" \"}\n            <em>tsconfig</em> file.\n        </p>\n        <p>\n            You're currently on the page \"{path}\" which was built on {data.site.buildTime}.\n        </p>\n        <p>\n            To learn more, head over to our{\" \"}\n            <a href=\"https://www.gatsbyjs.com/docs/typescript/\">documentation about TypeScript</a>.\n        </p>\n        <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n);\n\nexport default UsingTypescript;\n\nexport const query = graphql`\n    {\n        site {\n            buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n        }\n    }\n`;\n"],"names":["data","path","location","title","site","buildTime","href","Link","to"],"sourceRoot":""}